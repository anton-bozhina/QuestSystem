[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://dnbcei78vekvy"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_v831o"]
default_input_values = [0, 10.0, 1, 0.0, 2, 123.0, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_u8vlo"]
output_port_for_preview = 0
default_input_values = [0, Vector3(12, 23, 43)]
expanded_output_ports = [0]
function = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_bt3f1"]
output_port_for_preview = 0
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_e4fk7"]
varying_name = "test2"
varying_type = 3

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_45y7b"]
default_input_values = [0, 10.0, 1, 0.0, 2, 123.0, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_mm7i6"]
varying_name = "test"
varying_type = 1

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_3u50l"]
default_input_values = [0, 10.0, 1, 0.0, 2, 123.0, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_o1vp0"]
varying_name = "test"
varying_type = 1

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_keua7"]
default_input_values = [0, 10.0, 1, 0.0, 2, 123.0, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;


// Varyings
varying flat int test;
varying vec2 test2;




void vertex() {
	test = 0;
}

void fragment() {
	vec3 n_out2p0;
// ColorFunc:2
	vec3 n_in2p0 = vec3(12.00000, 23.00000, 43.00000);
	{
		vec3 c = n_in2p0;
		float r = (c.r * .393) + (c.g *.769) + (c.b * .189);
		float g = (c.r * .349) + (c.g *.686) + (c.b * .168);
		float b = (c.r * .272) + (c.g *.534) + (c.b * .131);
		n_out2p0 = vec3(r, g, b);
	}


// ColorConstant:3
	vec4 n_out3p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);
	float n_out3p4 = n_out3p0.a;


// Output:0
	ALBEDO = n_out2p0;
	BACKLIGHT = vec3(n_out3p4);


// VaryingSetter:4
	test2 = vec2(n_out3p0.xy);


}
"
varyings/test = "0,1"
varyings/test2 = "1,3"
nodes/fragment/0/position = Vector2(1200, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorFunc_u8vlo")
nodes/fragment/2/position = Vector2(640, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_bt3f1")
nodes/fragment/3/position = Vector2(40, 160)
nodes/fragment/4/node = SubResource("VisualShaderNodeVaryingSetter_e4fk7")
nodes/fragment/4/position = Vector2(360, 160)
nodes/fragment/5/node = SubResource("VisualShaderNodeIf_45y7b")
nodes/fragment/5/position = Vector2(1820, 60)
nodes/fragment/6/node = SubResource("VisualShaderNodeVaryingGetter_mm7i6")
nodes/fragment/6/position = Vector2(1520, 60)
nodes/fragment/7/node = SubResource("VisualShaderNodeIf_3u50l")
nodes/fragment/7/position = Vector2(1820, 380)
nodes/fragment/8/node = SubResource("VisualShaderNodeVaryingGetter_o1vp0")
nodes/fragment/8/position = Vector2(2080, 60)
nodes/fragment/9/node = SubResource("VisualShaderNodeIf_keua7")
nodes/fragment/9/position = Vector2(2380, 60)
nodes/fragment/10/node = SubResource("VisualShaderNodeIf_v831o")
nodes/fragment/10/position = Vector2(2380, 380)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 4, 0, 3, 4, 0, 18, 6, 0, 5, 1, 6, 0, 5, 0, 6, 0, 5, 2, 8, 0, 9, 1, 8, 0, 9, 0, 8, 0, 9, 2)

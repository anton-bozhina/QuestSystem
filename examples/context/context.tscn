[gd_scene load_steps=3 format=3 uid="uid://ei8wj4mp658l"]

[ext_resource type="Resource" uid="uid://dtw2f7kbmth53" path="res://variables.tres" id="1_0fqy8"]

[sub_resource type="GDScript" id="GDScript_3ibmd"]
script/source = "extends Control


@export var context: QuestographContext


func _ready() -> void:
	#context.variables.test
	#print(context.get_variable_list([TYPE_BOOL]))
	#print(context.get_variable('bool_var'))
	#context.set_variable('bool_var', Vector2.ZERO)
	#print(context.get_variable('bool_var'))
	#context.set_variables(str_to_var(var_to_str(context.get_variables())))
	#print(context.variables)
	#pass
	__tests()


func __tests() -> void:
	var start_variables: Array[Dictionary] = context.get_variables()
	print_debug('Start Variables:\\n%s' % '\\n'.join(start_variables))

	var new_variables: Array[Dictionary] = [
		{ \"name\": &\"string\", \"type\": 4, \"value\": \"test string\" },
		{ \"name\": &\"bool\", \"type\": 1, \"value\": true },
		{ \"name\": &\"vector3\", \"type\": 9, \"value\": Vector3(1, 2, 3) }
	]

	context.set_variables(new_variables)
	print_debug('New Variables:\\n%s' % '\\n'.join(start_variables))

	assert(context.get_variable('vector3').z == 3)
	assert(context.get_variables() == new_variables)
	print_debug('Test set_variables() and get_variables() passed!')

	context.set_variable('vector3', Vector3.INF)
	assert(context.get_variable('vector3') == Vector3.INF)
	print_debug('Test set_variable() and get_variable() passed!')

	assert(context.get_variable_list() as Array == [\"string\", \"bool\", \"vector3\"])
	print_debug('Test get_variable_list() passed!')

	assert(context.get_variable_list([TYPE_VECTOR3, TYPE_STRING]) == PackedStringArray([\"string\", \"vector3\"]))
	print_debug('Test filtered get_variable_list() passed!')

	assert(context.get_variable_list([TYPE_INT]) == PackedStringArray([]))
	print_debug('Test filtered get_variable_list() with not valid types passed!')

	context.set_variable('vector3', true)
	assert(context.get_variable('vector3') == Vector3.ZERO)
	print_debug('Test filtered get_variable_list() with not valid types passed!')

	var signal_result: Array = ['', false]
	var on_signal_func: Callable = func(variable, result):
		result.clear()
		result.append(variable)
		result.append(true)
	context.variable_changed.connect(on_signal_func.bind(signal_result), CONNECT_ONE_SHOT)
	context.set_variable('bool', false)
	assert(signal_result[0] == &'bool' and signal_result[1] == true)
	print_debug('Test variables_changed signal passed!')

	print_debug('Final Variables:\\n%s' % '\\n'.join(start_variables))
"

[node name="Context" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_3ibmd")
context = ExtResource("1_0fqy8")
